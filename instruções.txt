Trabalho 2 – Memória cache:
	O objetivo deste trabalho é avaliar o entendimento e domínio do aluno sobre o funcionamento da Memória Cache. Para isso, o aluno deverá realizar a implementação de um programa que simule o funcionamento de um módulo de memória cache. Essa memória cache deverá suportar os modelos de organização por mapeamento direto (DIR) e associativo. Para o modelo de mapeamento associativo, o aluno deverá utilizar os algoritmos de substituição  Least Recently Used (LRU) e First In, First Out (FIFO).  
	O programa deverá simular uma memória principal e uma memória cache. A entrada do programa será um arquivo e parâmetros indicando qual modelo de mapeamento e algoritmo (se aplicável) deverá ser utilizado. No arquivo, a primeira linha informará, respectivamente, o número de linhas da memória cache e o tamanho de cada linha da memória cache em bytes. Em seguida, será informada uma sequência de acessos a endereços de memória representados em 32 bits em base 16. O programa deverá verificar se o endereço de memória está presente na memória cache, caso esteja, deverá informar a ocorrência de um HIT de cache, caso contrário, deverá informar um MISS. A saída do programa será impressa no terminal (saída padrão) com um HIT ou MISS em cada linha para cada acesso à memória. A avaliação do trabalho levará em conta as ocorrências de acertos e erros na saída. Também será avaliado o código utilizado na implementação do programa. O programa deverá ser implementado utilizando a linguagem de programação Python. 

Linha de comando: 
python3 trabalho.py entrada.txt LRU
python3 trabalho.py entrada.txt FIFO
python3 trabalho.py entrada.txt DIR

Formato do arquivo de entrada (deve ser exatamente este formato):
1024 4096
0x000000A1
0x00002000
0x000000A1
0x00002000

Formato da saída no terminal (deve ser exatamente este formato):
MISS
MISS
HIT
HIT


Critério de avaliação:
Mapeamento direto (40%)
Mapeamento associativo (60%)
LRU (30%)
FIFO (30%)


